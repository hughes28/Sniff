{"version":3,"sources":["models/RegenDb.js"],"names":["Database","sync","force","then","UserModels","userDb","bulkCreate","user_name","email","password","active","PostModels","postDb","name","last_seen","reward","longitude","latitude","city","state","country","contact","description","found","found_user_id","formatted_address","deleted","submitter_user_id","AttributeModels","attributeDb","id","key","value","post_id","catch","e","console","log"],"mappings":"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","file":"RegenDb.js","sourcesContent":["import UserModels from './user';\nimport PostModels from './post';\nimport AttributeModels from './attribute';\nimport Database from './Database';\n\nexport default function () {\n    Database.sync({ force: true })\n        .then(() => UserModels.userDb.bulkCreate([\n            { user_name: 'laetansx', email: 'laetansx@gmail.com', password: '$2a$10$07AA5rKbjovcnZVsY36LIOJXcAwOdTPqqops0Lbv9GVhzILG0cAuO', active: true },\n            { user_name: 'ckhyena', email: 'ckhyena@gmail.com', password: '$2a$10$07AA5rKbjovcnZVsY36LIOJXcAwOdTPqqops0Lbv9GVhzILG0cAuO', active: true },\n            { user_name: 'cupidthedeer', email: 'cupidthedeer@jail.com', password: '$2a$10$07AA5rKbjovcnZVsY36LIOJXcAwOdTPqqops0Lbv9GVhzILG0cAuO', active: false },\n        ]))\n        .then(() => PostModels.postDb.bulkCreate([\n        \t{\n        \t\tname: 'Lae',\n        \t\tlast_seen: '2017-11-29T05:40:35.324Z',\n        \t\treward: 300.00,\n        \t\tlongitude: 45,\n        \t\tlatitude: 50,\n                city: 'Seattle',\n                state: 'WA',\n                country: 'USA',\n        \t\tcontact: 'laetansx@gmail.com',\n        \t\tdescription: 'Blue dog',\n        \t\tfound: false,\n        \t\tfound_user_id: 1,\n                formatted_address: '1 56th Ave, Seattle, WA, USA',\n        \t\tdeleted: false,\n        \t\tsubmitter_user_id: 2\n        \t},\n        \t{\n        \t\tname: 'Ck',\n        \t\tlast_seen: '2017-11-29T05:40:35.324Z',\n        \t\treward: 0.00,\n        \t\tlongitude: 45,\n        \t\tlatitude: 50,\n                city: 'Seattle',\n                state: 'WA',\n                country: 'USA',\n        \t\tcontact: 'hello@gmail.com',\n        \t\tdescription: 'Blue yeen',\n        \t\tfound: false,\n        \t\tfound_user_id: null,\n                formatted_address: '1 Bellvue Ave, Seattle, WA, USA',\n        \t\tdeleted: false,\n        \t\tsubmitter_user_id: 1\n        \t},\n        \t{\n        \t\tname: 'Cupid',\n        \t\tlast_seen: '2017-11-29T05:40:35.324Z',\n        \t\treward: 0.00,\n        \t\tlongitude: 45,\n        \t\tlatitude: 50,\n                city: 'Portland',\n                state: 'ME',\n                country: 'USA',\n        \t\tcontact: 'hello@gmail.com',\n        \t\tdescription: 'Blue pedo',\n        \t\tfound: false,\n        \t\tfound_user_id: null,\n                formatted_address: '5123 Port Drive, Portland, ME, USA',\n        \t\tdeleted: false,\n        \t\tsubmitter_user_id: 1\n        \t},\n        \t{\n        \t\tname: 'Rai',\n        \t\tlast_seen: '2017-11-29T05:40:35.324Z',\n        \t\treward: 0.00,\n        \t\tlongitude: 45,\n        \t\tlatitude: 50,\n                city: 'St. Paul',\n                state: 'MN',\n                country: 'USA',\n        \t\tcontact: 'hello@gmail.com',\n        \t\tdescription: 'Blue corgi',\n        \t\tfound: false,\n        \t\tfound_user_id: null,\n                formatted_address: '123 Hell Ave, St. Paul, MN, USA',\n        \t\tdeleted: true,\n        \t\tsubmitter_user_id: 3\n        \t}\n        ]))\n        .then(() => AttributeModels.attributeDb.bulkCreate([\n            {\n                id: 1,\n                key: 'sashimi',\n                value: 'salmon',\n                post_id: 1,\n            },\n            {\n                id: 2,\n                key: 'cringe',\n                value: 'furry',\n                post_id: 2,\n            },\n            {\n                id: 3,\n                key: 'oh hai',\n                value: 'mark',\n                post_id: 2,\n            }\n\n        ]))\n        .catch((e) => console.log('Error: ' + e + '\\nHint: Is your postgres running?'));\n\n}\n"]}