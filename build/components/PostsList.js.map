{"version":3,"sources":["components/PostsList.js"],"names":["PostsList","props","state","loading","deletePost","bind","url","DOMAIN_URL","username","axios","get","then","response","posts","data","setState","console","log","catch","error","errorMessage","message","index","newPosts","slice","concat","map","post","deleteButton","editButton","foundButton","postsEditable","id","pathname","name","formatted_address","additional_attributes","attr","key","value","React","Component"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;IAEqBA,S;;;AAEjB,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,0HACTA,KADS;;AAEf,cAAKC,KAAL,GAAa;AACTC,qBAAS;AADA,SAAb;AAGA,cAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,OAAlB;AALe;AAMlB;;;;4CAEmB;AAAA;;AAChB,gBAAIC,MAASC,qBAAT,sCAAJ;AACA,gBAAI,CAAC,CAAC,KAAKN,KAAL,CAAWO,QAAjB,EAA2B;AACvBF,sBAASC,qBAAT,+BAA6C,KAAKN,KAAL,CAAWO,QAAxD;AACH;AACDC,4BAAMC,GAAN,CAAUJ,GAAV,EACCK,IADD,CACM,UAACC,QAAD,EAAc;AAChB,oBAAMC,QAAQD,SAASE,IAAT,CAAcA,IAA5B;AACA,uBAAKC,QAAL,CAAc,EAACZ,SAAS,KAAV,EAAiBU,OAAOA,KAAxB,EAAd;AACAG,wBAAQC,GAAR,CAAYL,QAAZ;AACH,aALD,EAMCM,KAND,CAMO,UAACC,KAAD,EAAW;AACd,uBAAKJ,QAAL,CAAc,EAACZ,SAAS,KAAV,EAAiBiB,cAAcD,MAAMP,QAAN,CAAeE,IAAf,CAAoBO,OAAnD,EAAd;AACAL,wBAAQC,GAAR,CAAYE,KAAZ;AACH,aATD;AAUH;;;mCAEUG,K,EAAO;AACd,gBAAMC,WAAW,KAAKrB,KAAL,CAAWW,KAAX,CAAiBW,KAAjB,CAAuB,CAAvB,EAAyBF,KAAzB,EAAgCG,MAAhC,CAAuC,KAAKvB,KAAL,CAAWW,KAAX,CAAiBW,KAAjB,CAAuBF,QAAM,CAA7B,CAAvC,CAAjB;AACA,iBAAKP,QAAL,CAAc,EAACF,OAAOU,QAAR,EAAd;AACH;;;iCAEQ;AAAA;;AACL,gBAAI,KAAKrB,KAAL,CAAWC,OAAf,EAAwB;AACpB,uBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAA;AAAA;AADJ,iBADJ;AAKH,aAND,MAMO,IAAI,CAAC,CAAC,KAAKD,KAAL,CAAWW,KAAjB,EAAwB;AAC3B,uBACI;AAAA;AAAA;AAEQ,yBAAKX,KAAL,CAAWW,KAAX,CAAiBa,GAAjB,CAAqB,UAACC,IAAD,EAAOL,KAAP,EAAiB;AAClC,4BAAIM,eAAe,IAAnB;AACA,4BAAIC,aAAa,IAAjB;AACA,4BAAIC,cAAc,IAAlB;AACA,4BAAI,OAAK7B,KAAL,CAAW8B,aAAX,KAA6B,IAAjC,EAAuC;AACnCH,2CAAe,8BAAC,sBAAD,IAAc,YAAY,OAAKxB,UAA/B,EAA2C,QAAQuB,KAAKK,EAAxD,EAA4D,WAAWV,KAAvE,GAAf;AACAO,yCACI;AAAC,oDAAD;AAAA,kCAAM,IAAI;AACNI,kDAAU,YADJ;AAEN/B,+CAAO,EAAEyB,MAAMA,IAAR;AAFD,qCAAV;AAAA;AAAA,6BADJ;AAQAG,0CACI;AAAC,oDAAD;AAAA,kCAAM,IAAI;AACNG,kDAAU,aADJ;AAEN/B,+CAAO,EAAEyB,MAAMA,IAAR;AAFD,qCAAV;AAAA;AAAA,6BADJ;AAQH;AACD,+BACI;AAAA;AAAA,8BAAI,KAAKL,KAAT;AACKK,iCAAKK,EADV;AAAA;AAC4BL,iCAAKO,IADjC;AAAA;AAC+CP,iCAAKQ,iBADpD;AAEKN,sCAFL;AAGKD,wCAHL;AAIKE,uCAJL;AAKI;AAAA;AAAA;AACKH,qCAAKS,qBAAL,CAA2BV,GAA3B,CAA+B,UAACW,IAAD,EAAOf,KAAP;AAAA,2CAC5B;AAAA;AAAA,0CAAI,KAAKA,KAAT;AACKe,6CAAKC,GADV;AAAA;AACmBD,6CAAKE;AADxB,qCAD4B;AAAA,iCAA/B;AADL;AALJ,yBADJ;AAeH,qBAtCD;AAFR,iBADJ;AA6CH,aA9CM,MA8CA;AACH,uBACI;AAAA;AAAA;AACI;AAAA;AAAA;AAAK,6BAAKrC,KAAL,CAAWkB,YAAX,IAA2B;AAAhC;AADJ,iBADJ;AAKH;AACJ;;;;EA5FkCoB,gBAAMC,S;;kBAAxBzC,S","file":"PostsList.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport DeleteButton from './DeleteButton';\nimport { Link } from 'react-router-dom';\nimport {DOMAIN_URL} from '../utils/Constants';\n\nexport default class PostsList extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n        this.deletePost = this.deletePost.bind(this);\n    }\n\n    componentDidMount() {\n        let url = `${DOMAIN_URL}/api/v1/post/logged-in-userposts/`;\n        if (!!this.props.username) {\n            url = `${DOMAIN_URL}/api/v1/post/userposts/${this.props.username}`;\n        }\n        axios.get(url)\n        .then((response) => {\n            const posts = response.data.data;\n            this.setState({loading: false, posts: posts});\n            console.log(response);\n        })\n        .catch((error) => {\n            this.setState({loading: false, errorMessage: error.response.data.message});\n            console.log(error);\n        });\n    }\n\n    deletePost(index) {\n        const newPosts = this.state.posts.slice(0,index).concat(this.state.posts.slice(index+1));\n        this.setState({posts: newPosts});\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (\n                <div>\n                    <h1>Loading</h1>\n                </div>\n            );\n        } else if (!!this.state.posts) {\n            return (\n                <ul>\n                    {\n                        this.state.posts.map((post, index) => {\n                            let deleteButton = null;\n                            let editButton = null;\n                            let foundButton = null;\n                            if (this.props.postsEditable === true) {\n                                deleteButton = <DeleteButton deletePost={this.deletePost} postId={post.id} postIndex={index}/>;\n                                editButton = (\n                                    <Link to={{\n                                        pathname: '/post/edit',\n                                        state: { post: post }\n                                    }}>\n                                        Edit\n                                    </Link>\n                                );\n                                foundButton = (\n                                    <Link to={{\n                                        pathname: '/post/found',\n                                        state: { post: post }\n                                    }}>\n                                        Found\n                                    </Link>\n                                );\n                            }\n                            return (\n                                <li key={index}>\n                                    {post.id}: looking for {post.name} around {post.formatted_address}\n                                    {editButton}\n                                    {deleteButton}\n                                    {foundButton}\n                                    <ul>\n                                        {post.additional_attributes.map((attr, index) =>\n                                            <li key={index}>\n                                                {attr.key} => {attr.value}\n                                            </li>\n                                        )}\n                                    </ul>\n                                </li>\n                            );\n                        })\n                    }\n                </ul>\n            );\n        } else {\n            return (\n                <div>\n                    <h1>{this.state.errorMessage || \"Error loading content\"}</h1>\n                </div>\n            );\n        }\n    }\n\n\n}\n"]}