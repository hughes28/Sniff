{"version":3,"sources":["components/SignUpPage.js"],"names":["SignUpPage","props","state","username","password","confirmedPassword","errorMessage","handleChange","bind","handleCreateAccountButtonClicked","e","setState","target","name","value","emailRegex","email","match","length","axios","post","DOMAIN_URL","then","response","console","log","history","push","message","data","catch","error","React","Component"],"mappings":"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","file":"SignUpPage.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport {DOMAIN_URL} from '../utils/Constants';\n\nexport default class SignUpPage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t    username: '',\n\t\t    password: '',\n\t\t    confirmedPassword: '',\n\t\t    errorMessage: '',\n\t\t};\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleCreateAccountButtonClicked = this.handleCreateAccountButtonClicked.bind(this);\n\t}\n\n\thandleChange(e) {\n\t\tthis.setState({[e.target.name]: e.target.value});\n\t}\n\n\thandleCreateAccountButtonClicked() {\n\t\tconst emailRegex = /(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])/;\n\t\tif (!this.state.email) {\n\t\t\tthis.setState({errorMessage: 'Email field is empty.'});\n\t\t} else if (!this.state.email.match(emailRegex)) {\n\t\t\tthis.setState({errorMessage: 'Invalid email.'});\n\t\t} else if (this.state.username.length < 3) {\n\t\t\tthis.setState({errorMessage: 'Username must be at least three characters.'});\n\t\t} else if (this.state.password !== this.state.confirmedPassword) {\n\t\t\tthis.setState({errorMessage: 'Passwords do not match.'});\n\t\t} else if (this.state.password.length < 6) {\n\t\t\tthis.setState({errorMessage: 'Passwords must be at least six characters.'});\n\t\t} else {\n\t\t\taxios.post(`${DOMAIN_URL}/api/v1/user/create`, {\n\t\t\t\temail: this.state.email,\n\t\t\t\tusername: this.state.username,\n\t\t\t\tpassword: this.state.password,\n\t\t\t})\n\t\t\t.then((response) => {\n\t\t\t\tconsole.log(response);\n\t\t\t\tthis.setState({email: '', username: '', password: ''});\n\t\t\t\tthis.props.history.push('/', { message: response.data.message });\n\t\t\t})\n\t\t\t.catch((error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t\tthis.setState({ errorMessage: error.response.data.message });\n\t\t\t});\n\t\t}\n\t}\n\n  \trender() {\n\t    return (\n\t        <div>\n\t        \t{this.state.errorMessage.length > 0 ? <p>{this.state.errorMessage}</p> : \"\"}\n\t        \t<h4>Email:</h4>\n                <input onChange={this.handleChange} type=\"text\" name=\"email\" />\n\t\t\t\t<h4>Username:</h4>\n                <input onChange={this.handleChange} type=\"text\" name=\"username\" />\n\t\t\t\t<h4>Password:</h4>\n                <input onChange={this.handleChange} type=\"password\" name=\"password\" />\n                <h4>Confirm Password:</h4>\n                <input onChange={this.handleChange} type=\"password\" name=\"confirmedPassword\" />\n\t\t\t\t<button type=\"button\" onClick={this.handleCreateAccountButtonClicked}>Create account</button>\n\t\t\t</div>\n\t    );\n  \t}\n}\n"]}